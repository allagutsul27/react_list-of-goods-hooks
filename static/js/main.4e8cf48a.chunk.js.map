{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","visibleGoods","goods","ALPHABET","LENGTH","sort","good1","good2","localeCompare","length","reverse","getReorderedGoods","defaultOrder","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEIC,EAAY,UAAOR,GAEnBM,IAAaP,EAASM,OACxBG,EAnCG,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAEJO,EAAqBX,EAArBW,SAAUC,EAAWZ,EAAXY,OAEZH,EAAY,YAAOC,GAezB,OAbAD,EAAaI,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,KAAKI,EACH,OAAOG,EAAME,cAAcD,GAE7B,KAAKH,EACH,OAAOE,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITb,EACKK,EAAaS,UAGfT,EAUUU,CAAkBV,EAAc,CAAEF,WAAUH,gBAG7D,IAAMgB,GAA8B,IAAfhB,GAAwBG,IAAaP,EAASM,KAOnE,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYhB,IAAaP,EAASW,WAGtCa,QAAS,kBAAMhB,EAAYR,EAASW,WATtC,iCAcA,wBACEW,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WAAYhB,IAAaP,EAASY,SAGtCY,QAAS,kBAAMhB,EAAYR,EAASY,SATtC,4BAcA,wBACEU,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAAanB,IAGjBoB,QAAS,kBAAMnB,GAAeD,IAThC,sBAcEgB,GACA,wBACEE,KAAK,SACLD,UAAWE,IACT,SACA,YACA,YAEFC,QA1DI,WACZnB,GAAc,GACdG,EAAYR,EAASM,OAiDf,sBAcJ,6BAEGG,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCtInBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4e8cf48a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const { ALPHABET, LENGTH } = SortType;\n\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case ALPHABET:\n        return good1.localeCompare(good2);\n\n      case LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  let visibleGoods = [...goodsFromServer];\n\n  if (sortType !== SortType.NONE) {\n    visibleGoods = getReorderedGoods(visibleGoods, { sortType, isReversed });\n  }\n\n  const defaultOrder = isReversed === false && sortType === SortType.NONE;\n\n  const reset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {!defaultOrder && (\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-danger',\n              'is-light',\n            )}\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}